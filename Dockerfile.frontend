# Use the official Node.js image as a base image for building the app
FROM node:18 as builder

# Set the working directory inside the container
WORKDIR /app

# Copy package.json and package-lock.json to the working directory
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application code
COPY . .

# Accept environment variables at build time
ARG DANGEROUSLY_DISABLE_HOST_CHECK
ARG REACT_APP_API_ENDPOINT
ARG REACT_APP_GOOGLE_MAPS_API_KEY

# Set environment variables from build arguments
ENV DANGEROUSLY_DISABLE_HOST_CHECK=${DANGEROUSLY_DISABLE_HOST_CHECK}
ENV REACT_APP_API_ENDPOINT=${REACT_APP_API_ENDPOINT}
ENV REACT_APP_GOOGLE_MAPS_API_KEY=${REACT_APP_GOOGLE_MAPS_API_KEY}

# Build the React app
RUN npm run build:prod

# Use NGINX to serve the app
FROM nginx:alpine

# Copy static assets from builder stage
COPY --from=builder /app/build/ /usr/share/nginx/html/
# Optional: Custom nginx.conf:
COPY default.conf /etc/nginx/conf.d/default.conf

# Expose port 80 to the outside once the container has launched
EXPOSE 80

# Start NGINX by using the default CMD from the nginx image
CMD ["nginx", "-g", "daemon off;"]
